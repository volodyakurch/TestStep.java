{"ast":null,"code":"import apiClient from'./apiClient';export const testRunService={getTestRuns:async function(projectId){let page=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;let size=arguments.length>2&&arguments[2]!==undefined?arguments[2]:20;const response=await apiClient.get(\"/v1/projects/\".concat(projectId,\"/test-runs\"),{params:{page,size}});return response.data;},getTestRun:async(projectId,testRunId)=>{const response=await apiClient.get(\"/v1/projects/\".concat(projectId,\"/test-runs/\").concat(testRunId));return response.data;},createTestRun:async(projectId,testRun)=>{const response=await apiClient.post(\"/v1/projects/\".concat(projectId,\"/test-runs\"),testRun);return response.data;},startTestRun:async(projectId,testRunId)=>{const response=await apiClient.post(\"/v1/projects/\".concat(projectId,\"/test-runs/\").concat(testRunId,\"/start\"));return response.data;},completeTestRun:async(projectId,testRunId)=>{const response=await apiClient.post(\"/v1/projects/\".concat(projectId,\"/test-runs/\").concat(testRunId,\"/complete\"));return response.data;},addTestResult:async(projectId,testRunId,testResult)=>{const response=await apiClient.post(\"/v1/projects/\".concat(projectId,\"/test-runs/\").concat(testRunId,\"/results\"),testResult);return response.data;}};","map":{"version":3,"names":["apiClient","testRunService","getTestRuns","projectId","page","arguments","length","undefined","size","response","get","concat","params","data","getTestRun","testRunId","createTestRun","testRun","post","startTestRun","completeTestRun","addTestResult","testResult"],"sources":["/Users/vladimirsmirnov/projects/tms-system/frontend/src/services/testRunService.ts"],"sourcesContent":["import apiClient from './apiClient';\nimport { TestRun, TestResult, Page } from '../types';\n\nexport const testRunService = {\n  getTestRuns: async (projectId: number, page: number = 0, size: number = 20): Promise<Page<TestRun>> => {\n    const response = await apiClient.get(`/v1/projects/${projectId}/test-runs`, {\n      params: { page, size }\n    });\n    return response.data;\n  },\n\n  getTestRun: async (projectId: number, testRunId: number): Promise<TestRun> => {\n    const response = await apiClient.get(`/v1/projects/${projectId}/test-runs/${testRunId}`);\n    return response.data;\n  },\n\n  createTestRun: async (projectId: number, testRun: Partial<TestRun>): Promise<TestRun> => {\n    const response = await apiClient.post(`/v1/projects/${projectId}/test-runs`, testRun);\n    return response.data;\n  },\n\n  startTestRun: async (projectId: number, testRunId: number): Promise<TestRun> => {\n    const response = await apiClient.post(`/v1/projects/${projectId}/test-runs/${testRunId}/start`);\n    return response.data;\n  },\n\n  completeTestRun: async (projectId: number, testRunId: number): Promise<TestRun> => {\n    const response = await apiClient.post(`/v1/projects/${projectId}/test-runs/${testRunId}/complete`);\n    return response.data;\n  },\n\n  addTestResult: async (projectId: number, testRunId: number, testResult: Partial<TestResult>): Promise<TestResult> => {\n    const response = await apiClient.post(`/v1/projects/${projectId}/test-runs/${testRunId}/results`, testResult);\n    return response.data;\n  },\n};"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,aAAa,CAGnC,MAAO,MAAM,CAAAC,cAAc,CAAG,CAC5BC,WAAW,CAAE,cAAAA,CAAOC,SAAiB,CAAkE,IAAhE,CAAAC,IAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,IAAE,CAAAG,IAAY,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CACxE,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAT,SAAS,CAACU,GAAG,iBAAAC,MAAA,CAAiBR,SAAS,eAAc,CAC1ES,MAAM,CAAE,CAAER,IAAI,CAAEI,IAAK,CACvB,CAAC,CAAC,CACF,MAAO,CAAAC,QAAQ,CAACI,IAAI,CACtB,CAAC,CAEDC,UAAU,CAAE,KAAAA,CAAOX,SAAiB,CAAEY,SAAiB,GAAuB,CAC5E,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAT,SAAS,CAACU,GAAG,iBAAAC,MAAA,CAAiBR,SAAS,gBAAAQ,MAAA,CAAcI,SAAS,CAAE,CAAC,CACxF,MAAO,CAAAN,QAAQ,CAACI,IAAI,CACtB,CAAC,CAEDG,aAAa,CAAE,KAAAA,CAAOb,SAAiB,CAAEc,OAAyB,GAAuB,CACvF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAT,SAAS,CAACkB,IAAI,iBAAAP,MAAA,CAAiBR,SAAS,eAAcc,OAAO,CAAC,CACrF,MAAO,CAAAR,QAAQ,CAACI,IAAI,CACtB,CAAC,CAEDM,YAAY,CAAE,KAAAA,CAAOhB,SAAiB,CAAEY,SAAiB,GAAuB,CAC9E,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAT,SAAS,CAACkB,IAAI,iBAAAP,MAAA,CAAiBR,SAAS,gBAAAQ,MAAA,CAAcI,SAAS,UAAQ,CAAC,CAC/F,MAAO,CAAAN,QAAQ,CAACI,IAAI,CACtB,CAAC,CAEDO,eAAe,CAAE,KAAAA,CAAOjB,SAAiB,CAAEY,SAAiB,GAAuB,CACjF,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAT,SAAS,CAACkB,IAAI,iBAAAP,MAAA,CAAiBR,SAAS,gBAAAQ,MAAA,CAAcI,SAAS,aAAW,CAAC,CAClG,MAAO,CAAAN,QAAQ,CAACI,IAAI,CACtB,CAAC,CAEDQ,aAAa,CAAE,KAAAA,CAAOlB,SAAiB,CAAEY,SAAiB,CAAEO,UAA+B,GAA0B,CACnH,KAAM,CAAAb,QAAQ,CAAG,KAAM,CAAAT,SAAS,CAACkB,IAAI,iBAAAP,MAAA,CAAiBR,SAAS,gBAAAQ,MAAA,CAAcI,SAAS,aAAYO,UAAU,CAAC,CAC7G,MAAO,CAAAb,QAAQ,CAACI,IAAI,CACtB,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}