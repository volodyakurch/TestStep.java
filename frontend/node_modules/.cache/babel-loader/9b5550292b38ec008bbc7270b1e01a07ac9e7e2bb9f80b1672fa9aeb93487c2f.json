{"ast":null,"code":"import apiClient from'./apiClient';export const authService={login:async credentials=>{const response=await apiClient.post('/v1/auth/login',credentials);return response.data;},register:async userData=>{const response=await apiClient.post('/v1/auth/register',userData);return response.data;},logout:()=>{localStorage.removeItem('token');localStorage.removeItem('user');},getCurrentUser:()=>{const userStr=localStorage.getItem('user');return userStr?JSON.parse(userStr):null;},getToken:()=>{return localStorage.getItem('token');},setToken:token=>{if(token){localStorage.setItem('token',token);}else{localStorage.removeItem('token');}}};","map":{"version":3,"names":["apiClient","authService","login","credentials","response","post","data","register","userData","logout","localStorage","removeItem","getCurrentUser","userStr","getItem","JSON","parse","getToken","setToken","token","setItem"],"sources":["/Users/vladimirsmirnov/projects/tms-system/frontend/src/services/authService.ts"],"sourcesContent":["import apiClient from './apiClient';\nimport { User, LoginCredentials, RegisterData } from '../types';\n\nexport const authService = {\n  login: async (credentials: LoginCredentials): Promise<{ user: User; token: string }> => {\n    const response = await apiClient.post('/v1/auth/login', credentials);\n    return response.data;\n  },\n\n  register: async (userData: RegisterData): Promise<User> => {\n    const response = await apiClient.post('/v1/auth/register', userData);\n    return response.data;\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n\n  getCurrentUser: (): User | null => {\n    const userStr = localStorage.getItem('user');\n    return userStr ? JSON.parse(userStr) : null;\n  },\n\n  getToken: (): string | null => {\n    return localStorage.getItem('token');\n  },\n\n  setToken: (token: string | null) => {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    }\n  },\n};"],"mappings":"AAAA,MAAO,CAAAA,SAAS,KAAM,aAAa,CAGnC,MAAO,MAAM,CAAAC,WAAW,CAAG,CACzBC,KAAK,CAAE,KAAO,CAAAC,WAA6B,EAA6C,CACtF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAJ,SAAS,CAACK,IAAI,CAAC,gBAAgB,CAAEF,WAAW,CAAC,CACpE,MAAO,CAAAC,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDC,QAAQ,CAAE,KAAO,CAAAC,QAAsB,EAAoB,CACzD,KAAM,CAAAJ,QAAQ,CAAG,KAAM,CAAAJ,SAAS,CAACK,IAAI,CAAC,mBAAmB,CAAEG,QAAQ,CAAC,CACpE,MAAO,CAAAJ,QAAQ,CAACE,IAAI,CACtB,CAAC,CAEDG,MAAM,CAAEA,CAAA,GAAM,CACZC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAChCD,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAEDC,cAAc,CAAEA,CAAA,GAAmB,CACjC,KAAM,CAAAC,OAAO,CAAGH,YAAY,CAACI,OAAO,CAAC,MAAM,CAAC,CAC5C,MAAO,CAAAD,OAAO,CAAGE,IAAI,CAACC,KAAK,CAACH,OAAO,CAAC,CAAG,IAAI,CAC7C,CAAC,CAEDI,QAAQ,CAAEA,CAAA,GAAqB,CAC7B,MAAO,CAAAP,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC,CACtC,CAAC,CAEDI,QAAQ,CAAGC,KAAoB,EAAK,CAClC,GAAIA,KAAK,CAAE,CACTT,YAAY,CAACU,OAAO,CAAC,OAAO,CAAED,KAAK,CAAC,CACtC,CAAC,IAAM,CACLT,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAClC,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}