services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: tms
      POSTGRES_USER: tms_user
      POSTGRES_PASSWORD: tms_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - tms-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U tms_user -d tms"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.maven
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/tms
      SPRING_DATASOURCE_USERNAME: tms_user
      SPRING_DATASOURCE_PASSWORD: tms_password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - tms-network
    healthcheck:
      test: [ "CMD", "ps", "aux" ]  # Простая проверка процессов
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - tms-network

volumes:
  postgres_data:

networks:
  tms-network:
    driver: bridge